Object subclass: #Game	instanceVariableNames: 'movimientoValido escenario conjuntoDeEscenarios'	classVariableNames: ''	poolDictionaries: ''	category: 'AdventureGame'!!Game methodsFor: 'InicializacionesElementosAuxiliares' stamp: 'EduardoValenzuela 10/22/2012 10:13'!inicializaConjuntoDeEscenarios 	"Por ahora el metodo regresara nulo, este metodo estara en funcion de la estructura de Escenario"	^nil! !!Game methodsFor: 'InicializacionesElementosAuxiliares' stamp: 'EduardoValenzuela 10/22/2012 10:12'!inicializaEscenario 	^ Escenario new.! !!Game methodsFor: 'initialize-release' stamp: 'EduardoValenzuela 10/23/2012 08:13'!initialize 	super initialize.	escenario := self inicializaEscenario.	escenario setMotorDeJuego:self.	escenario asignaDelegados.	conjuntoDeEscenarios := self inicializaConjuntoDeEscenarios.	escenario openInWorld .				! !!Game methodsFor: 'initialize-release' stamp: 'EduardoValenzuela 10/23/2012 01:03'!verificaEntidadesEnPuntox: puntoX yEnY: puntoY	escenario ! !PasteUpMorph subclass: #Escenario	instanceVariableNames: 'conjuntoDeEntidades marcador nombre motorDeJuego'	classVariableNames: ''	poolDictionaries: ''	category: 'AdventureGame'!!Escenario methodsFor: 'initialization' stamp: 'EduardoValenzuela 10/23/2012 08:39'!asignaDelegados 	conjuntoDeEntidades do: [:each |		(each className asSymbol == #Jugador ) ifTrue: 			[each asignaDelegadoMovimiento: self .			 Transcript show:'Acabo de asignar como delegado movimiento el objeto ', self asString ,' en el objeto de ', each asString ;cr.].		(each className asSymbol == #Enemigo ) ifTrue: 			[each asignaDelegadoMovimiento: self .			 Transcript  show: 'Acabo de asignar como delegado movimiento el objeto ', self asString ,' en el objeto de ', each asString ;cr. ]. ].! !!Escenario methodsFor: 'initialization' stamp: 'EduardoValenzuela 10/23/2012 08:14'!inicializaEntidades	| unaListaDeEntidadesDiversas|			unaListaDeEntidadesDiversas := OrderedCollection new.	unaListaDeEntidadesDiversas add: Jugador new.	unaListaDeEntidadesDiversas add: Enemigo new.	unaListaDeEntidadesDiversas add: Pocion new.	unaListaDeEntidadesDiversas add: Cofre new.	self setConjuntoDeEntidades: unaListaDeEntidadesDiversas ! !!Escenario methodsFor: 'initialization' stamp: 'EduardoValenzuela 10/23/2012 01:28'!initialize	super initialize.	self inicializaEntidades .	self disableDragNDrop.	bounds := 100@100 corner: 400@400.	color := Color paleBlue darker.	conjuntoDeEntidades do: [:each | self addMorph: each . Transcript show: 'agregada instancia de ', each asString ; cr. ].	! !!Escenario methodsFor: 'initialization' stamp: 'EduardoValenzuela 10/23/2012 01:22'!obtenerConjuntoDeEntidades^conjuntoDeEntidades ! !!Escenario methodsFor: 'initialization' stamp: 'EduardoValenzuela 10/22/2012 10:35'!setConjuntoDeEntidades: unaColleccionDeEntidades	conjuntoDeEntidades := unaColleccionDeEntidades ! !!Escenario methodsFor: 'initialization' stamp: 'EduardoValenzuela 10/22/2012 10:36'!setMarcador	marcador := 0 ! !!Escenario methodsFor: 'initialization' stamp: 'EduardoValenzuela 10/23/2012 01:01'!setMotorDeJuego: unDelegado	motorDeJuego := unDelegado ! !!Escenario methodsFor: 'initialization' stamp: 'EduardoValenzuela 10/22/2012 10:36'!setNombre: unNombre	nombre := unNombre ! !!Escenario methodsFor: 'initialization' stamp: 'EduardoValenzuela 10/23/2012 10:50'!verificarSolapamiento	| coleccionDePuntos contador aux|	coleccionDePuntos := OrderedCollection  new.	contador :=1.	 conjuntoDeEntidades  do: [:each | Transcript  show: 'extrayendo punto de ' , each asString ; cr. aux := (each  position) . coleccionDePuntos add: aux. contador  := contador + 1].	Transcript show: 'El conjunto de puntos de la coleccion es la siguiente: ', coleccionDePuntos asString  ;cr.	! !Morph subclass: #Entidad	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'AdventureGame'!!Entidad methodsFor: 'as yet unclassified' stamp: 'EduardoValenzuela 10/2/2012 10:52'!cambiarSprite: unIndice enElConjuntoDeSprites: elConjunto	self ! !!Entidad methodsFor: 'as yet unclassified' stamp: 'EduardoValenzuela 10/2/2012 10:41'!posX	^self position x.! !!Entidad methodsFor: 'as yet unclassified' stamp: 'EduardoValenzuela 10/2/2012 10:42'!posY	^self position y.! !Entidad subclass: #Personaje	instanceVariableNames: 'delegadoMovimiento'	classVariableNames: ''	poolDictionaries: ''	category: 'AdventureGame'!!Personaje methodsFor: 'as yet unclassified' stamp: 'EduardoValenzuela 10/23/2012 08:18'!asignaDelegadoMovimiento: unDelegado	delegadoMovimiento := unDelegado ! !!Personaje methodsFor: 'as yet unclassified' stamp: 'EduardoValenzuela 10/23/2012 08:18'!initialize 	super initialize .! !Personaje subclass: #Jugador	instanceVariableNames: 'delegadoDeAcciones'	classVariableNames: ''	poolDictionaries: ''	category: 'AdventureGame'!!Jugador methodsFor: '*Keymapping-Core-override' stamp: 'EduardoValenzuela 10/23/2012 08:21'!handleKeystroke: anEvent 	| keyValue |	keyValue := anEvent keyValue. 	keyValue = 30 "up arrow" 		ifTrue: [self position: self position - (0 @ 15)]. 	keyValue = 31 "down arrow" 		ifTrue: [self position: self position + (0 @ 15)].	keyValue = 29 "right arrow"		ifTrue: [self position: self position + (15 @ 0)].	keyValue = 28 "left arrow"		ifTrue: [self position: self position - (15 @ 0)].		delegadoMovimiento verificarSolapamiento .! !!Jugador methodsFor: '*Polymorph-Widgets' stamp: 'EduardoValenzuela 9/23/2012 19:02'!handlesMouseOver: anEvent	^true! !!Jugador methodsFor: 'event handling' stamp: 'EduardoValenzuela 9/23/2012 19:03'!mouseLeave: anEvent 	anEvent hand newKeyboardFocus: self! !!Jugador methodsFor: 'initialize' stamp: 'EduardoValenzuela 10/22/2012 10:50'!initialize 	super initialize.	self position: 150@150.	self takeKeyboardFocus.! !!Jugador methodsFor: 'Logica de Jugador' stamp: 'EduardoValenzuela 10/2/2012 10:24'!movimientoALaDerecha	| pos |		pos := self position .	pos x > 350 ifTrue: [^false].	^true.! !!Jugador methodsFor: 'Logica de Jugador' stamp: 'EduardoValenzuela 10/2/2012 10:23'!movimientoALaIzquierda	| pos |		pos := self position.		pos x < 100 ifTrue: [^ false] .	^ true.! !!Jugador methodsFor: 'Logica de Jugador' stamp: 'EduardoValenzuela 10/2/2012 10:25'!movimientoAbajo	| pos |	pos := self position .	pos y > 350 ifTrue: [^false].	^true.! !!Jugador methodsFor: 'Logica de Jugador' stamp: 'EduardoValenzuela 10/2/2012 10:29'!movimientoArriba	| pos |	pos := self position .	pos y < 100 ifTrue: [^false] .	^true .! !!Jugador methodsFor: 'Logica de Jugador' stamp: 'EduardoValenzuela 10/1/2012 08:56'!movimientoValido: unaDireccion	"verifica en el nivel que no esté traspasando un morph"	| pos |		pos := self position.		(pos x > 350 & (unaDireccion value == 4) )"derecha"		ifTrue:  [ ^false ].	(pos y > 350 & (unaDireccion value == 2) )"abajo"		ifTrue: [ ^false ].	(pos x < 115 & (unaDireccion value == 3) ) "izquierda"		ifTrue: [ ^false ].	(pos y < 115 & (unaDireccion value == 1) )"arriba"		ifTrue: [ ^false ].		^true.! !!Jugador methodsFor: 'as yet unclassified' stamp: 'EduardoValenzuela 10/23/2012 01:07'!setDelegadoDeAcciones: unDelegado 	delegadoDeAcciones := unDelegado ! !Entidad subclass: #ObjetoDeEscenario	instanceVariableNames: 'sePuedeTraspasar'	classVariableNames: ''	poolDictionaries: ''	category: 'AdventureGame'!!ObjetoDeEscenario methodsFor: 'as yet unclassified' stamp: 'EduardoValenzuela 10/21/2012 23:57'!SetSePuedeTraspasar: anStatement	sePuedeTraspasar  = anStatement ! !!ObjetoDeEscenario methodsFor: 'as yet unclassified' stamp: 'EduardoValenzuela 10/21/2012 23:58'!esTraspasable	^sePuedeTraspasar ! !Personaje subclass: #Enemigo	instanceVariableNames: 'movimientoValido'	classVariableNames: ''	poolDictionaries: ''	category: 'AdventureGame'!!Enemigo methodsFor: 'as yet unclassified' stamp: 'EduardoValenzuela 10/22/2012 10:55'!initialize 	super initialize .	self position: 200@250.	self color: Color yellow.! !ObjetoDeEscenario subclass: #Objeto	instanceVariableNames: ''	classVariableNames: 'nombre'	poolDictionaries: ''	category: 'AdventureGame'!Objeto subclass: #Pocion	instanceVariableNames: 'cantidadACurar tipo curaPersonaje'	classVariableNames: ''	poolDictionaries: ''	category: 'AdventureGame'!!Pocion methodsFor: 'as yet unclassified' stamp: 'EduardoValenzuela 10/22/2012 10:56'!initialize 	super initialize .	self position: 130@160.	self color: Color green.! !Objeto subclass: #Cofre	instanceVariableNames: 'cantidad contenido status'	classVariableNames: ''	poolDictionaries: ''	category: 'AdventureGame'!!Cofre methodsFor: 'as yet unclassified' stamp: 'EduardoValenzuela 10/22/2012 10:52'!initialize 	super initialize .	self position: 200@200.! !ObjetoDeEscenario subclass: #Item	instanceVariableNames: 'nombreElemento'	classVariableNames: ''	poolDictionaries: ''	category: 'AdventureGame'!!Item methodsFor: 'as yet unclassified' stamp: 'EduardoValenzuela 10/22/2012 00:02'!SetNombreDeElemento: unNombre	nombreElemento  = unNombre ! !!Item methodsFor: 'as yet unclassified' stamp: 'EduardoValenzuela 10/22/2012 00:02'!nombreDelElemento	^nombreElemento ! !