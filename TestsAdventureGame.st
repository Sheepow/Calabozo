TestCase subclass: #TestEscenario	instanceVariableNames: 'unEscenario juego'	classVariableNames: ''	poolDictionaries: ''	category: 'TestsAdventureGame'!!TestEscenario methodsFor: 'as yet unclassified' stamp: 'EduardoValenzuela 11/10/2012 12:08'!setUp 	juego:= Game new.	unEscenario := juego escenario.! !!TestEscenario methodsFor: 'as yet unclassified' stamp: 'EduardoValenzuela 11/10/2012 12:30'!testEfectoPocion	| unaPocion unPersonaje cantidadACurar cantidadAnteriorHP |			unaPocion := ((unEscenario obtenerConjuntoDeEntidades) select: [:cadaEntidad |						cadaEntidad className asSymbol = #Pocion			]) first.		unPersonaje := ((unEscenario obtenerConjuntoDeEntidades) select: [:cadaEntidad |		cadaEntidad class superclass asString asSymbol = #Personaje		]) first.		cantidadAnteriorHP := unPersonaje HP.			self assert:  unPersonaje HP = cantidadAnteriorHP.	cantidadACurar := unaPocion curar .	unaPocion SurtirEfectoa: unPersonaje .		self deny: unPersonaje HP = cantidadAnteriorHP .	self assert: unPersonaje HP > cantidadAnteriorHP .	(cantidadACurar + cantidadAnteriorHP )>(unPersonaje maxHP) ifTrue: [		self assert: unPersonaje maxHP = (unPersonaje HP ).		]; ifFalse: [		self assert: unPersonaje HP = (cantidadAnteriorHP  + cantidadACurar ).		]							! !!TestEscenario methodsFor: 'as yet unclassified' stamp: 'EduardoValenzuela 11/12/2012 02:01'!testReboteJugador	|posicionOriginal unJugador |	 unJugador := Jugador new.	"Por default inicia volteando a la izquierda"	posicionOriginal := unJugador position.		unJugador rebote.		self deny: posicionOriginal x = (unJugador position x).	self assert:  unJugador position  = (posicionOriginal  + (15@0)).							! !!TestEscenario methodsFor: 'as yet unclassified' stamp: 'EduardoValenzuela 11/10/2012 12:35'!testRemoverEntidadesDeNivel	| enemigos |	enemigos :=(juego escenario obtenerConjuntoDeEntidades) select: [:cadaEntidad | 		cadaEntidad className asSymbol  = #Enemigo		].		enemigos do: [:cadaUno | cadaUno commitSepukku ].		self assert: ((juego escenario obtenerConjuntoDeEntidades) select: [:cadaEntidad | 		cadaEntidad className asSymbol  = #Enemigo		]) isEmpty .	self deny: ((juego escenario obtenerConjuntoDeEntidades) select: [:cadaEntidad | 		cadaEntidad className asSymbol  = #Jugador 		]) isEmpty .							! !